name: Playwright with Artillery and Allure reports

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm install

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Install Artillery globally
      run: npm install -g artillery
      
    - name: Create .env file
      run: |
          echo "email=${{ secrets.EMAIL }}" > .env
          echo "password=${{ secrets.PASSWORD }}" >> .env
          echo "emailInvalid=${{ secrets.EMAIL_INVALID }}" >> .env
          echo "passwordInvalid=${{ secrets.PASSWORD_INVALID }}" >> .env
          echo "url=${{ secrets.URL }}" >> .env
          echo "name=${{ secrets.NAME }}" >> .env
          echo "emailNew=${{ secrets.EMAILNEW }}" >> .env
          echo "subject=${{ secrets.SUBJECT }}" >> .env
          echo "message=${{ secrets.MESSAGE }}" >> .env
          echo "clientId=${{ secrets.CLIENTID }}" >> .env
          echo "clientSecret=${{ secrets.CLIENTSECRET }}" >> .env
          echo "TOKEN=${{ secrets.TOKEN }}" >> .env
          echo "PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}" >> .env
          
    - name: Run Playwright initial test 
      run:
          npx playwright test tests/api/initial_Test.spec.ts
      continue-on-error: true
      
    - name: Run Playwright tests in firefox
      run:
          npx playwright test tests --project=firefox --workers=3
      continue-on-error: true

    - name: Run Playwright tests in webkit
      run: npx playwright test tests --project=webkit --workers=3
      continue-on-error: true
      
    - name: Run Playwright tests in chromium
      run: npx playwright test tests --project=chromium --workers=3
      continue-on-error: true

    - name: Run Artillery tests and generate reports
      run: |
        artillery run artillery_1.yml -o results1.json
        artillery run artillery_2.yml -o results2.json
        artillery report results1.json -o report1.html
        artillery report results2.json -o report2.html
      continue-on-error: true

    - name: Generate Allure report
      run: npx allure generate --clean -o allure
      continue-on-error: true

    - name: Compress Artillery reports
      run: zip -r artillery-reports.zip results1.json results2.json report1.html report2.html

    - name: Compress Allure report
      run: zip -r allure-report.zip allure/

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: artillery-reports
        path: artillery-reports.zip
        retention-days: 30

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report.zip
        retention-days: 30
